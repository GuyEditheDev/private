{"main": "#coding: utf-8
import json
import requests
import random, string
import os
import platform
import traceback
import asyncio
import time
import re
import httpx
from os import system
from random import randint
from discord.ext import commands
from colorama import Fore, init

init()
data = {}

with open('token.json') as f:
    data = json.load(f)
token = data['token']


os.system("cls")
os.system("title NITRO SENDER BY GUYEDIT")
print('\033[1;36m' + """ ███▄    █  ██▓▄▄▄█████▓ ██▀███   ▒█████       ██████ ▓█████  ███▄    █ ▓█████▄ ▓█████  ██▀███  
 ██ ▀█   █ ▓██▒▓  ██▒ ▓▒▓██ ▒ ██▒▒██▒  ██▒   ▒██    ▒ ▓█   ▀  ██ ▀█   █ ▒██▀ ██▌▓█   ▀ ▓██ ▒ ██▒
▓██  ▀█ ██▒▒██▒▒ ▓██░ ▒░▓██ ░▄█ ▒▒██░  ██▒   ░ ▓██▄   ▒███   ▓██  ▀█ ██▒░██   █▌▒███   ▓██ ░▄█ ▒
▓██▒  ▐▌██▒░██░░ ▓██▓ ░ ▒██▀▀█▄  ▒██   ██░     ▒   ██▒▒▓█  ▄ ▓██▒  ▐▌██▒░▓█▄   ▌▒▓█  ▄ ▒██▀▀█▄  
▒██░   ▓██░░██░  ▒██▒ ░ ░██▓ ▒██▒░ ████▓▒░   ▒██████▒▒░▒████▒▒██░   ▓██░░▒████▓ ░▒████▒░██▓ ▒██▒
░ ▒░   ▒ ▒ ░▓    ▒ ░░   ░ ▒▓ ░▒▓░░ ▒░▒░▒░    ▒ ▒▓▒ ▒ ░░░ ▒░ ░░ ▒░   ▒ ▒  ▒▒▓  ▒ ░░ ▒░ ░░ ▒▓ ░▒▓░
░ ░░   ░ ▒░ ▒ ░    ░      ░▒ ░ ▒░  ░ ▒ ▒░    ░ ░▒  ░ ░ ░ ░  ░░ ░░   ░ ▒░ ░ ▒  ▒  ░ ░  ░  ░▒ ░ ▒░
   ░   ░ ░  ▒ ░  ░        ░░   ░ ░ ░ ░ ▒     ░  ░  ░     ░      ░   ░ ░  ░ ░  ░    ░     ░░   ░ 
         ░  ░              ░         ░ ░           ░     ░  ░         ░    ░       ░  ░   ░     
                                                                         ░                         """ + '\33[0m')

channelID = input('\033[1;92m' + 'Enter your channel ID: ' + '\33[0m')
amount = int(input('\33[1;31m' + 'Amount of nitro codes to generate: ' + '\33[0m'))
timeout = int(input('\33[1;33m'+ 'Amount of timeout send codes nitro (seconds): ' + '\33[0m'))



bot = commands.Bot(command_prefix=".", self_bot=True)
ready = False

codeRegex = re.compile("(discord.com/gifts/|discordapp.com/gifts/|discord.gift/)([a-zA-Z0-9]+)")

while 1:
    try:
        @bot.event
        async def on_message(ctx):
            global ready
            if not ready:
                print(Fore.LIGHTCYAN_EX + '\n\nChecker Nitro Discord activatee on ' + str(
                    len(bot.guilds)) + ' Servers 🔫' + Fore.RESET)
                print(Fore.LIGHTBLUE_EX + time.strftime("%H:%M:%S ", time.localtime()) + Fore.RESET, end='')
                print("[+] The checker is ready")
                ready = True





                header = {
                    'authorization': token
                }


                x = 1
                while x <= amount:

                    code = "https://discord.gift/" + ('').join(random.choices(string.ascii_letters + string.digits, k=16))
                    payload = {
                        'content': code
                    }

                    r = requests.post("https://discord.com/api/v8/channels/" + channelID + "/messages", data=payload, headers=header)
                    print('\33[1;35m' + '[*] %s nitro uncheck generated' % x)
                    time.sleep(timeout)
                    x += 1
                print('\33[0;37;42m' + f'Success! I send {amount} nitro uncheck.' + '\x1b[0m')
                time.sleep(10)
                print('Go to check all nitro gift !')





            if codeRegex.search(ctx.content):
                code = codeRegex.search(ctx.content).group(2)

                start_time = time.time()
                if len(code) < 16:
                    try:
                        print(
                            Fore.LIGHTRED_EX + "[=] Auto-detected a fake code: " + code + " From " + ctx.author.name + "#" + ctx.author.discriminator + Fore.LIGHTMAGENTA_EX + " [" + ctx.guild.name + " > " + ctx.channel.name + "]" + Fore.RESET)
                    except:
                        print(
                            Fore.LIGHTRED_EX + "[=] Auto-detected a fake code: " + code + " From " + ctx.author.name + "#" + ctx.author.discriminator + Fore.RESET)

                else:
                    async with httpx.AsyncClient() as client:
                        result = await client.post(
                            'https://discordapp.com/api/v6/entitlements/gift-codes/' + code + '/redeem',
                            json={'channel_id': str(ctx.channel.id)},
                            headers={'authorization': token, 'user-agent': 'Mozilla/5.0'})
                        delay = (time.time() - start_time)
                        try:
                            print(
                                Fore.LIGHTGREEN_EX + "[-] Sniped code: " + Fore.LIGHTRED_EX + code + Fore.RESET + " From " + ctx.author.name + "#" + ctx.author.discriminator + Fore.LIGHTMAGENTA_EX + " [" + ctx.guild.name + " > " + ctx.channel.name + "]" + Fore.RESET)
                        except:
                            print(
                                Fore.LIGHTGREEN_EX + "[-] Sniped code: " + Fore.LIGHTRED_EX + code + Fore.RESET + " From " + ctx.author.name + "#" + ctx.author.discriminator + Fore.RESET)

                    if 'This gift has been redeemed already' in str(result.content):
                        print(Fore.LIGHTYELLOW_EX + "[-] Code has been already redeemed" + Fore.RESET,
                              end='')
                    elif 'nitro' in str(result.content):
                        print(Fore.GREEN + "[+] Code applied" + Fore.RESET, end='')
                    elif 'Unknown Gift Code' in str(result.content):
                        print(Fore.LIGHTRED_EX + "[-] Invalid Code" + Fore.RESET, end=' ')
                    print(" Delay:" + Fore.GREEN + " %.3fs" % delay + Fore.RESET)
            elif (('**giveaway**' in str(ctx.content).lower() or ('react with' in str(
                    ctx.content).lower() and 'giveaway' in str(ctx.content).lower()))):
                try:
                    await asyncio.sleep(randint(100, 200))
                    await ctx.add_reaction("🎉")
                    print(
                        Fore.LIGHTYELLOW_EX + "[-] Enter Giveaway " + Fore.LIGHTMAGENTA_EX + " [" + ctx.guild.name + " > " + ctx.channel.name + "]" + Fore.RESET)
                except:
                    print(Fore.LIGHTBLUE_EX + time.strftime("%H:%M:%S ", time.localtime()) + Fore.RESET, end='')
                    print(
                        Fore.LIGHTYELLOW_EX + "[x] Failed to enter Giveaway " + Fore.LIGHTMAGENTA_EX + " [" + ctx.guild.name + " > " + ctx.channel.name + "]" + Fore.RESET)
            elif '<@' + str(bot.user.id) + '>' in ctx.content and (
                    'giveaway' in str(ctx.content).lower() or 'won' in ctx.content or 'winner' in str(
                ctx.content).lower()):
                print(Fore.LIGHTBLUE_EX + time.strftime("%H:%M:%S ", time.localtime()) + Fore.RESET, end='')
                try:
                    won = re.search("You won the \*\*(.*)\*\*", ctx.content).group(1)
                except:
                    won = "UNKNOWN"
                print(
                    Fore.GREEN + "[🎉] Congratulations! You won Giveaway: " + Fore.LIGHTCYAN_EX + won + Fore.LIGHTMAGENTA_EX + " [" + ctx.guild.name + " > " + ctx.channel.name + "]" + Fore.RESET)


        bot.run(token, bot=False)
    except:
        file = open("logs_error.txt", "w")
        file.write(traceback.format_exc())
        file.close()
        exit(0)"}
